/*
* 列表组件: list
* @params:
*       store：数据源
*       isremote: 是否远程加载数据，默认为false
*       autoload: 是否自动加载数据，默认为true
*       rowtpl: row模板
*       ispager: 是否分页，默认为false
*       pagertype: 分页类型（‘加载更多:more’和‘页码展示:page’），默认为页码展示
*       beforerowrender: 在row render前的方法
*       afterload: 数据加载完毕后执行的方法
*/


require('./list.scss');
var tpl = require('./list.jade');
var rowTpl = require('./row.jade');

/*
* 依赖分页组件
*/
require('../pager/pager');

/*
* 依赖parse工具类
*/
var parse = require('../../../utils/parse');

/*
* mixin
*/
var ListMixin = require('../../mixin/list');

var List = Vue.extend({
    mixins: [ListMixin],
    props: ['store', 'autoload', 'rowtpl', 'isremote', 'url', 'params', 'ispager', 'pagertype', 'pagesize', 'beforerowrender', 'afterload'],
    template: tpl(),
    data: function(){
        return {
            total: 0,
            pagertype: this.pagertype || 'page',
            vispager: this.ispager || false,
            vpagesize: this.pagesize || 10
        }
    },
    methods: {
        init: function(){
            this.rowTpl = rowTpl;
            this.body = $(this.$el).find('ul');
            this.afterload = this.afterload || function(){};
            this.beforeRowRender = this.beforerowrender || function(record){return record;};
            this.pager = this.$refs.pager;
            this.rowTpl = this.rowtpl || rowTpl;
            if(this.autoload === false || this.autoload === "false"){
                this.autoload = false;
            }else{
                this.autoload = true;
            }
            if(this.autoload){
                this.load();
            }
            this.initEvents();
        },
        /*
        * 加载本地数据
        */
        getStoreLocal: function(){
            this._empty();
            this.addRows(this.store || []);
        },
        /*
        * 加载远程数据
        */
        getStoreAsync: function (params, cb) {
            this.params = params || this.params || {
                start: 0,
                take: this.vpagesize
            };
            var _self = this, url = this.url + this.parseParams();
            this.body.loading(true);
            $.get(url, function(rtn){
                _self.body.loading(false);
                if(!rtn.succeeded){
                    return parse.showError(rtn);
                }
                _self.total = rtn.data.total;
                /*
                * 如果是分页，则需要清空当前数据
                */
                if (_self.pagertype === 'page') {
                    _self._empty();
                }
                _self.addRows(rtn.data.list);
                _self.afterload && _self.afterload(rtn.data.list);
                _self.$dispatch('afterload', rtn.data)
                cb && cb(rtn);
            });
        },
        load: function (params, cb) {
            if(!this.isremote || this.isremote === 'false' || !this.url){
                this.getStoreLocal();
            }else{
                this.getStoreAsync(params, cb);
            }
        },
        /*
        * 添加单行-首部
        */
        addRowBefore: function(record){
            var $row = this._createRow(record);
            this.body.prepend($row);
        },
        /*
        * 添加单行-尾部
        */
        addRowAfter: function(record){
            var $row = this._createRow(record);
            this.body.append($row);
        }
    }
});

module.exports = Vue.component('vlist', List);