/*
* 面板组件: radiogroup
* @params:
*   layout: vbox/hbox，默认为hbox(横向排列)
*   hidelabel: 是否隐藏label，默认为false
*   fieldlabel: label文案
*   labelwidth: label宽度
*   groupwidth: radiogroup宽度 
*   defaultvalue: 初始化时选中的值，默认为第一项
*   name: input value of name, default is null
*   items：radio单元，json数组：
*       [{
*           value: '1',
*           text: 'One'
*       }]
*/


require('./checkboxGroup.scss');
var tpl = require('./checkboxGroup.jade');

/*
* mixin
*/
var FormMixin = require('../../mixin/form');

var CheckboxGroup = Vue.extend({
    mixins: [FormMixin],
    template: tpl(),
    props: {
        layout: null,
        items: null,
        defaultvalue: null,
        hidelabel: null,
        fieldlabel: null,
        groupwidth: {
            type: String,
            default: ''
        },
        labelwidth: null,
        inputname: {
            type: String,
            default: ''
        },
        inputtype: {
            type: String,
            default: 'radio'
        }
    },
    data: function(){
        return {
            cls: this.layout === 'vbox' ? 'v-box':'',
            items: this.items || [],
            val: '',
            isshowlabel: !this.hidelabel,
            labeltext: this.fieldlabel || '类型',
            labelstyle: {
                width: this.transformCssUnit(this.labelwidth || '200px')
            },
            groupstyle: {
                width: this.transformCssUnit(this.groupwidth)
            }
        }
    },
    methods: {
        init: function () {
            var _self = this;
            this.val = this.inputtype === 'radio' ? (this.defaultvalue || this.items[0].value) : [];
            $(`input[name=${this.inputname}]`).each(function (index, el) {
                var $this = $(el),
                    $parent = $this.parents('.checkbox-stage'),
                    $thisFa = $parent.find('.fa');
                $thisFa.removeClass('fa-dot-circle-o').addClass('fa-circle-o');
                _self.inputtype === 'radio' && $this.val() === _self.val && $thisFa.toggleClass('fa-circle-o fa-dot-circle-o');
            });
        },
        changecheck: function (evt) {
            var $this = $(evt.target),
                $parent = $this.parents('.checkbox-stage'),
                $thisFa = $parent.find('.fa');
            if (this.inputtype === 'radio') {
                $(`input[name=${this.inputname}]`)
                    .parents('.checkbox-stage')
                    .find('.fa')
                    .addClass('fa-circle-o')
                    .removeClass('fa-dot-circle-o');
                $thisFa.toggleClass('fa-circle-o fa-dot-circle-o');
            } else {
                $thisFa.toggleClass('fa-circle-o fa-dot-circle-o');
            }
        },
        reset: function () {
            var _self = this;
            this.val = this.inputtype === 'radio' ? (this.defaultvalue || this.items[0].value) : [];
            $(`input[name=${this.inputname}]`).each(function (index, el) {
                var $this = $(el),
                    $parent = $this.parents('.checkbox-stage'),
                    $thisFa = $parent.find('.fa');
                $thisFa.removeClass('fa-dot-circle-o').addClass('fa-circle-o');
                _self.inputtype === 'radio' && $this.val() === _self.val && $thisFa.toggleClass('fa-circle-o fa-dot-circle-o');
            });
        }
    }
});

module.exports = Vue.component('vcheckboxgroup', CheckboxGroup);