/*
* 表格组件: table
* @params:
*       header: 表格头部
*       store：数据源
*       isremote: 是否从远程api获取数据源store，默认为false（从本地获取）
*       url：接口地址
*       params：接口参数
*       ispager：是否分页，默认为false
*       pagesize：每页显示条数，默认10条
*       total: 表格数据总数
*       afterload: 数据加载完后的cb
*/


require('./table.scss');
var tpl = require('./table.jade');
var rowTpl = require('./row.jade');

/*
* 依赖分页组件
*/
require('../pager/pager');

/*
* 依赖parse工具类
*/
var parse = require('../../../utils/parse');

/*
* mixin
*/
var ListMixin = require('../../mixin/list');

var Table = Vue.extend({
    mixins: [ListMixin],
    props: ['columns', 'store', 'isremote', 'url', 'params', 'ispager', 'pagesize', 'afterload', 'beforerowrender'],
    template: tpl(),
    data: function(){
        return {
            total: 0,
            vcolumns: this.columns,
            vispager: this.ispager || false,
            vpagesize: this.pagesize || 10
        }
    },
    methods: {
        init: function(){
            this.rowTpl = rowTpl;
            this.body = $(this.$el).find('tbody');
            this.pager = this.$refs.pager;
            this.afterload = this.afterload || function(){};
            this.beforeRowRender = this.beforerowrender || function(record){return record;};
            this.load();
            this.initEvents();
        },
        load: function(params, cb){
            if(!this.isremote || !this.url){
                return;
            }
            this.params = params || this.params || {
                start: 0,
                take: this.vpagesize
            };
            var _self = this, url = this.url + this.parseParams();
            this.body.loading(true);
            $.get(url, function(rtn){
                _self.body.loading(false);
                if(!rtn.succeeded){
                    return parse.showError(rtn);
                }
                _self.total = rtn.data.total;
                _self._empty();
                _self.addRows(rtn.data.list);
                _self.afterload(rtn.data.list);
                cb && cb();
            });
        },
        getRowData: function(index){
            index = index || 0;
            return this.body.find('tr').eq(index).data('record');
        }
    }
});

module.exports = Vue.component('vtable', Table);