var MultiDropList = function (element, options) {
    var self = this;
    this.element = $(element);
    this.opts = {
        hiddenEl: "",
        displayEl: "",
        data: [],
        url: "",
        displayKey: "name",
        hiddenKey: "id",
        subNodeKey: "subDepartments",
        method: "GET",
        isMulti: false,
        hasSelectAll: false,
        selectAllText: '所有部门',
        selected: function () { },
        afterCreate: function () { }
    }
    if (typeof options === "object") {
        $.extend(this.opts, options);
    }
    this.selectedValue = [];
    this.element.on("click", "a", function () {
        var obj = {};
        obj[self.opts.hiddenKey] = $(this).attr("data-value");
        obj[self.opts.displayKey] = $.trim($(this).text());
        if (self.opts.isMulti) {
            self.setValue(obj);
            return false;
        } else {
            self.setValue([obj]);
        }
        $.isFunction(self.opts.selected) && self.opts.selected(obj, this);
    });

    this._loadData();
}

MultiDropList.prototype.loadValue = function () {
    var hiddenValue = [], displayValue = [], opts = this.opts;
    for (var i = 0; i < this.selectedValue.length; i++) {
        hiddenValue.push(this.selectedValue[i][opts.hiddenKey]);
        displayValue.push(this.selectedValue[i][opts.displayKey]);
    }
    this.element.find(this.opts.hiddenEl).val(hiddenValue.join(","));
    this.element.find(this.opts.displayEl).html(displayValue.join(","));
}

MultiDropList.prototype.setValue = function (data) {
    if ($.isArray(data)) {
        this.selectedValue = data;
    } else if (data == '' || data == null) {
        this.selectedValue = [{ 'id': '', 'name': '请选择部门' }];
    } else if (typeof data === "object") {
        this.selectedValue = [data];
    } else if (typeof data === "number" || typeof data === "string") {
        this.selectedValue = [{ 'id': data, 'name': this._getName(data) }];
    }
    this.loadValue();
}

MultiDropList.prototype.getValue = function () {
    return this.selectedValue;
}
MultiDropList.prototype._getName = function (id) {
    var self = this, name = '';
    function searchName(data) {
        $.each(data, function (k, v) {
            if (v['id'] == id) {
                name = v['name'];
                return false;
            } else if ($.isArray(v['subDepartments']) && v['subDepartments'].length > 0) {
                searchName(v['subDepartments']);
            }
        })
    }
    searchName(this.data);
    return name;
}
MultiDropList.prototype._loadData = function() {
    var self = this;
    $.ajax({
        url: this.opts.url,
        type: this.opts.method,
        success: function (data) {
            if (data[self.opts.subNodeKey]) {
                self.data = data[self.opts.subNodeKey];
                self._render();
            }
        }
    });
}

MultiDropList.prototype._render = function () {
    var opts = this.opts;
    function getTree(data) {
        var html = "";
        for (var i = 0; i < data.length; i++) {
            var curNode = data[i], subStr = '', subMenuClass = '';
            if ($.isArray(curNode[opts.subNodeKey])) {
                subStr = getTree(curNode[opts.subNodeKey]);
                if (subStr) {
                    subStr = '<ul class="dropdown-menu">' + subStr + '</ul>';
                    subMenuClass = 'dropdown-submenu';
                }
                html += '<li class="' + subMenuClass + '">' +
                        '<a data-value="' + curNode[opts.hiddenKey] + '" href="javascript:;" title="' + curNode[opts.displayKey] + '">' + curNode[opts.displayKey] + '</a>' +
                            subStr +
                        '</li>';
            } else {
                html += '<li><a data-value="' + curNode[opts.hiddenKey] + '" href="javascript:;" title="' + curNode[opts.displayKey] + '">' + curNode[opts.displayKey] + '</a></li>';
            }
        }
        return html;
    }
    var allItems = '';
    if (this.opts.hasSelectAll) {
        allItems = '<li class=""><a title="' + this.opts.selectAllText + '" href="javascript:;" data-value="">' + this.opts.selectAllText + '</a></li>';
    }
    this.element.find(".dropdown-menu").html(allItems + getTree(this.data)).addClass('dropdown-menu-tree');
    if (typeof this.opts.afterCreate === 'function') {
        this.opts.afterCreate(this);
    }
}
module.exports = MultiDropList;